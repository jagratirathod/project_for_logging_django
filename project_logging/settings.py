"""
Django settings for project_logging project.

Generated by 'django-admin startproject' using Django 5.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-%0^5j@)4mnn)u10fnb2^4e+&6j3)2=xcoc4q37x=wjm4**(--('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'mainapp',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project_logging.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project_logging.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# logger conf 

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False  if DEBUG else True ,

    "formatters": {
        "verbose": {
            "format": "%(levelname)s %(asctime)s %(module)s %(lineno)s %(message)s",
        },
        "simple": {
            "format": "%(levelname)s %(asctime)s %(module)s %(funcName)s %(lineno)s %(message)s",
        },
    },   

    "filters": {
        "require_debug_true": {
            "()": "django.utils.log.RequireDebugTrue",
        },
    },

    "handlers": {
        "console" : {
            "level": 'DEBUG' if DEBUG  else "INFO",
            "filters": ["require_debug_true"],
            "class": 'logging.StreamHandler',
            "formatter": 'verbose',
        },

        'info': {
            "level": "INFO",
            "class": "logging.handlers.RotatingFileHandler",
            "filename" : os.path.join(BASE_DIR , "log/info.log") ,
            "maxBytes" : 300 * 1024 * 1024 ,
            "backupCount" : 10 , 
            "formatter": "verbose",
            "encoding" : 'utf-8'
        },

        'demo': {
            "level": "INFO",
            "class": "logging.handlers.RotatingFileHandler",
            "filename" : os.path.join(BASE_DIR , "log/demo.log") ,
            "maxBytes" : 1024 * 1024 * 50 ,
            "backupCount" : 5 , 
            "formatter": "verbose",
            "encoding" : 'utf-8'
        },

        "city": {
            "level": "INFO",
            "class": "logging.handlers.RotatingFileHandler",
            "filename" : os.path.join(BASE_DIR , "log/city.log") ,
            "maxBytes" : 1024 * 1024 * 50 ,
            "backupCount" : 5 , 
            "formatter": "verbose",
            "encoding" : 'utf-8'
        },
    }, 

    'loggers' : {
        "django" : {
            "handlers" : ["info" , "console"] ,
            "propagate" : True ,
            "level" : "INFO" ,
        },

        'demo_log' : {
            'handlers' : ['demo'],
            "propagate" : True ,
            "level" : 'INFO'
        },

        'city_log' : {
            'handlers' : ['city'],
            "propagate" : True ,
            "level" : 'INFO'
        },
    }
}